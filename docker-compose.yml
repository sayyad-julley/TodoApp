services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: todoapp-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodb_data:/data/db
    networks:
      - todoapp-network

  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: todoapp-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGO_URI=mongodb://root:example@mongodb:27017/todoapp?authSource=admin
      - JWT_SECRET=dev-secret-change-me-in-production
      - JWT_EXPIRES_IN=7d
      - FRONTEND_URL=http://localhost:5173
      - START_WITHOUT_DB=true
    depends_on:
      - mongodb
    volumes:
      - ./golden-path/templates/fullstack-todo/backend:/app
      - /app/node_modules
    networks:
      - todoapp-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

  # Frontend Development Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: todoapp-frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:5000
    volumes:
      - ./golden-path/templates/fullstack-todo/frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - todoapp-network
    stdin_open: true
    tty: true

volumes:
  mongodb_data:

networks:
  todoapp-network:
    driver: bridge

